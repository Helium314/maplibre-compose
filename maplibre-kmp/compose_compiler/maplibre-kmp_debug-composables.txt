restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun NativeMap(
  stable modifier: Modifier
  stable uiPadding: PaddingValues
  stable styleUrl: String
  stable updateMap: Function1<@[ParameterName(name = 'map')] MapControl, Unit>
  stable onStyleLoaded: Function1<@[ParameterName(name = 'style')] Style, Unit>
  stable onRelease: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun MaplibreMap(
  stable modifier: Modifier? = @static Companion
  stable styleUrl: String? = @static "https://demotiles.maplibre.org/style.json"
  stable uiPadding: PaddingValues? = @static PaddingValues(8.dp)
  stable isDebugEnabled: Boolean = @static false
  stable isLogoEnabled: Boolean = @static true
  stable isAttributionEnabled: Boolean = @static true
  stable isCompassEnabled: Boolean = @static true
  stable isTiltGesturesEnabled: Boolean = @static true
  stable isZoomGesturesEnabled: Boolean = @static true
  stable isRotateGesturesEnabled: Boolean = @static true
  stable isScrollGesturesEnabled: Boolean = @static true
  stable styleContent: @[ExtensionFunctionType] Function3<ExpressionScope, Composer, Int, Unit>? = @static ComposableSingletons$MaplibreMapKt.lambda-1
)
restartable skippable scheme("[0, [0]]") fun Top(
  stable block: Function2<Composer, Int, Unit>
  unused stable <this>: Companion
)
restartable skippable scheme("[0, [0]]") fun Bottom(
  stable block: Function2<Composer, Int, Unit>
  unused stable <this>: Companion
)
restartable skippable scheme("[0, [0]]") fun Above(
  stable layerId: String
  stable block: Function2<Composer, Int, Unit>
  unused stable <this>: Companion
)
restartable skippable scheme("[0, [0]]") fun Below(
  stable layerId: String
  stable block: Function2<Composer, Int, Unit>
  unused stable <this>: Companion
)
inline fun CircleLayer(
  stable key: String
  stable source: SourceHandle
  stable sourceLayer: String? = @static ""
  stable minZoom: Float = @static 0.0f
  stable maxZoom: Float = @static 24.0f
  stable filter: Expression<Boolean>? = @dynamic Expressions.nil()
  stable visible: Boolean = @static true
  stable layout: CircleLayout? = @dynamic CircleLayout()
  stable paint: CirclePaint? = @dynamic CirclePaint()
)
restartable skippable fun LayerNode(
  stable key: String
  stable factory: Function1<@[ParameterName(name = 'id')] String, T>
  stable update: @[ExtensionFunctionType] Function1<Updater<LayerNode<T>>, Unit>
)
inline fun LineLayer(
  stable key: String
  stable source: SourceHandle
  stable sourceLayer: String? = @static ""
  stable minZoom: Float = @static 0.0f
  stable maxZoom: Float = @static 24.0f
  stable filter: Expression<Boolean>? = @dynamic Expressions.nil()
  stable visible: Boolean = @static true
  stable layout: LineLayout? = @dynamic LineLayout()
  stable paint: LinePaint? = @dynamic LinePaint()
)
inline fun rememberGeoJsonSource(
  stable key: String
  stable shape: Shape
  stable options: GeoJsonOptions? = @static GeoJsonOptions()
): SourceHandle
fun rememberSource(
  stable key: String
  stable factory: Function1<@[ParameterName(name = 'id')] String, T>
  stable update: @[ExtensionFunctionType] Function1<T, Unit>
): SourceHandle
